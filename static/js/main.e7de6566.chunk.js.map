{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Container/Container.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","FeedbackOptions","onLeaveFeedback","button","onClick","Notification","message","notification","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","Section","title","App","useState","setGood","setNeutral","setBad","countTotalFeedback","target","textContent","state","totalCount","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,OAAS,kC,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,eAAiB,qC,qICEpB,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAChC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,oBCD1B,SAASI,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACtC,OACI,qCACI,wBAAQJ,UAAWC,IAAEI,OAAQC,QAASF,EAAtC,kBAIA,wBAAQJ,UAAWC,IAAEI,OAAQC,QAASF,EAAtC,qBAIA,wBAAQJ,UAAWC,IAAEI,OAAQC,QAASF,EAAtC,oB,oBCXG,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAO,mBAAGR,UAAWC,IAAEQ,aAAhB,SAA+BD,I,oBCA3B,SAASE,EAAT,GAMX,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,mBAEA,OAAiB,IAAVD,EACH,cAACP,EAAD,CAAcC,QAAQ,sBAEtB,qBAAIR,UAAWC,IAAEe,eAAjB,UACI,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UCjBG,SAASE,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOnB,EAAY,EAAZA,SACrC,OACI,qCACI,6BAAKmB,IACJnB,KCCE,SAASoB,IAAO,IAAD,EACFC,mBAAS,GADP,mBACnBT,EADmB,KACbU,EADa,OAEID,mBAAS,GAFb,mBAEnBR,EAFmB,KAEVU,EAFU,OAGJF,mBAAS,GAHL,mBAGnBP,EAHmB,KAGdU,EAHc,KAuBpBC,EAAqB,WACvB,OAAOb,EAAOC,EAAUC,GAQ5B,OACI,eAACf,EAAD,WACI,cAACmB,EAAD,CAASC,MAAM,wBAAf,SACI,cAACf,EAAD,CAAiBC,gBA9BR,SAAC,GAGlB,OAHiC,EAAbqB,OACAC,aAGhB,IAAK,OACDL,GAAQ,SAAAM,GAAK,OAAIA,EAAQ,KACzB,MACJ,IAAK,UACDL,GAAW,SAAAK,GAAK,OAAIA,EAAQ,KAC5B,MACJ,IAAK,MACDJ,GAAO,SAAAI,GAAK,OAAIA,EAAQ,KACxB,MACJ,QACI,aAmBJ,cAACV,EAAD,CAASC,MAAM,aAAf,SACI,cAACR,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBAjBwB,WACpC,IAAMa,EAAaJ,IACnB,OAAOK,KAAKC,MAAOnB,EAAOiB,EAAc,KAeRG,UC9CxCC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACf,EAAD,MAEJgB,SAASC,eAAe,W","file":"static/js/main.e7de6566.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__t-318\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1Mq72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__tJCbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__qaf7C\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n    return (\n        <>\n            <button className={s.button} onClick={onLeaveFeedback}>\n                Good\n            </button>\n\n            <button className={s.button} onClick={onLeaveFeedback}>\n                Neutral\n            </button>\n\n            <button className={s.button} onClick={onLeaveFeedback}>\n                Bad\n            </button>\n        </>\n    );\n}\n\nFeedbackOptions.propTypes = {\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\n// OLD CLASS\n// function FeedbackOptions({ options, onLeaveFeedback }) {\n// return options.map(option => (\n//     <button\n//         key={'btn-' + option}\n//         className={s.button}\n//         onClick={onLeaveFeedback}\n//     >\n//         {option}\n//     </button>\n// ));\n// }\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n    return <p className={s.notification}>{message}</p>;\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage,\n}) {\n    return total === 0 ? (\n        <Notification message=\"No feedback given\" />\n    ) : (\n        <ul className={s.statisticsList}>\n            <li>Good: {good}</li>\n            <li>Neutral: {neutral}</li>\n            <li>Bad: {bad}</li>\n            <li>Total: {total}</li>\n            <li>Positive feedback: {positivePercentage}%</li>\n        </ul>\n    );\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n    return (\n        <>\n            <h2>{title}</h2>\n            {children}\n        </>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};\n","import { useState } from 'react';\n\nimport Container from './components/Container';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\n\nexport default function App() {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n    const handleChange = ({ target }) => {\n        let option = target.textContent;\n\n        switch (option) {\n            case 'Good':\n                setGood(state => state + 1);\n                break;\n            case 'Neutral':\n                setNeutral(state => state + 1);\n                break;\n            case 'Bad':\n                setBad(state => state + 1);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const countTotalFeedback = () => {\n        return good + neutral + bad;\n    };\n\n    const countPositiveFeedbackPercentage = () => {\n        const totalCount = countTotalFeedback();\n        return Math.round((good / totalCount) * 100);\n    };\n\n    return (\n        <Container>\n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions onLeaveFeedback={handleChange} />\n            </Section>\n\n            <Section title=\"Statictics\">\n                <Statistics\n                    good={good}\n                    neutral={neutral}\n                    bad={bad}\n                    total={countTotalFeedback()}\n                    positivePercentage={countPositiveFeedbackPercentage()}\n                />\n            </Section>\n        </Container>\n    );\n}\n\n// OLD CLASS\n// class App extends Component {\n//     state = {\n//         good: 0,\n//         neutral: 0,\n//         bad: 0,\n//     };\n\n//     getOptions = () => {\n//         const keys = Object.keys(this.state);\n//         return keys.map(\n//             key => `${key.slice(0, 1).toUpperCase()}${key.slice(1)}`,\n//         );\n//     };\n\n//     handleChange = ({ target }) => {\n//         const feedbackOption = target.textContent.toLowerCase();\n//         this.setState({ [feedbackOption]: this.state[feedbackOption] + 1 });\n//     };\n\n//     countTotalFeedback = () => {\n//         const values = Object.values(this.state);\n//         return values.reduce((total, value) => total + value, 0);\n//     };\n\n//     countPositiveFeedbackPercentage = () => {\n//         const { good } = this.state;\n//         const totalCount = this.countTotalFeedback();\n//         return Math.round((good / totalCount) * 100);\n//     };\n\n//     render() {\n//         const options = this.getOptions();\n//         const { good, neutral, bad } = this.state;\n\n//         return (\n//             <Container>\n//                 <Section title=\"Please leave feedback\">\n//                     <FeedbackOptions\n//                         options={options}\n//                         onLeaveFeedback={this.handleChange}\n//                     />\n//                 </Section>\n\n//                 <Section title=\"Statictics\">\n//                     <Statistics\n//                         good={good}\n//                         neutral={neutral}\n//                         bad={bad}\n//                         total={this.countTotalFeedback()}\n//                         positivePercentage={this.countPositiveFeedbackPercentage()}\n//                     />\n//                 </Section>\n//             </Container>\n//         );\n//     }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}